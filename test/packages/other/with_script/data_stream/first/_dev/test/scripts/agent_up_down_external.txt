[!external_stack] skip 'Skipping external stack test.'

# Register stack and check that we get the expected output.
use_stack -profile ${CONFIG_PROFILES}/default
! stderr .
cmpenv stdout want_use.json

# Install an agent.
install_agent -profile ${CONFIG_PROFILES}/default
! stderr .
cmp stdout want_agent_up.text

# Bring up a docker container and check that we get the expected output.
docker_up -profile ${CONFIG_PROFILES}/default hello_service
! stderr .
cp stdout got_up.text
match_file want_up.pattern got_up.text 

# Take down the service and check logs for our message.
docker_down hello_service
! stderr .
cmp stdout want_down.text

# Uninstall the agent.
uninstall_agent -profile ${CONFIG_PROFILES}/default
! stderr .
stdout '^deleted agent policies for '${PKG}/${DATA_STREAM}

# Then attempt to take it down again.
! stack_down -profile ${CONFIG_PROFILES}/default
! stdout .
stderr '^cannot take down externally run stack '${CONFIG_PROFILES}'/default$'

-- hello_service/docker-compose.yml --
version: '3.8'
services:
  # Service name matches directoryâ€¦ for reasons.
  hello_service:
    image: alpine:latest
    command: ["echo", "Hello, World!"]
-- want_use.json --
{
	"provider": "compose",
	"elasticsearch_host": "https://127.0.0.1:9200",
	"elasticsearch_username": "elastic",
	"elasticsearch_password": "changeme",
	"kibana_host": "https://127.0.0.1:5601",
	"ca_cert_file": "${CONFIG_PROFILES}/default/certs/ca-cert.pem"
}
-- want_up.pattern --
deployed elastic-package-service-[0-9]+:hello_service-1
-- want_down.text --
hello_service-1  | Hello, World!
-- want_agent_up.text --
installed agent policies for with_script/first
