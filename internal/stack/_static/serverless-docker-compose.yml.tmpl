version: '2.4'
services:
  elastic-agent:
    image: "{{ fact "agent_image" }}"
    healthcheck:
      test: "elastic-agent status"
      timeout: 2s
      start_period: 360s
      retries: 180
      interval: 5s
    hostname: docker-fleet-agent
    env_file: "./elastic-agent.env"
    volumes:
    - type: bind
      source: ../../../tmp/service_logs/
      target: /tmp/service_logs/
    # Mount service_logs under /run too as a testing workaround for the journald input (see elastic-package#1235).
    - type: bind
      source: ../../../tmp/service_logs/
      target: /run/service_logs/
    - "../certs/ca-cert.pem:/etc/ssl/certs/elastic-package.pem"

  elastic-agent_is_ready:
    image: tianon/true:multiarch
    depends_on:
      elastic-agent:
        condition: service_healthy

{{ $logstash_enabled := fact "logstash_enabled" }}
{{ if eq $logstash_enabled "true" }}
  logstash:
    build:
      dockerfile: "./Dockerfile.logstash"
      args:
        IMAGE: "{{ fact "logstash_image" }}"
    healthcheck:
      test: bin/logstash -t
      start_period: 120s
      interval: 60s
      timeout: 60s
      retries: 5
    volumes:
      - "../certs/logstash:/usr/share/logstash/config/certs"
    ports:
       - "127.0.0.1:5044:5044"
       - "127.0.0.1:9600:9600"
    environment:
      - xpack.monitoring.enabled=false
      - ELASTIC_USER={{ fact "username" }}
      - ELASTIC_PASSWORD={{ fact "password" }}
      - ELASTIC_HOSTS={{ fact "elasticsearch_host" }}

  logstash_is_ready:
    image: tianon/true:multiarch
    depends_on:
      logstash:
        condition: service_healthy
{{ end }}
