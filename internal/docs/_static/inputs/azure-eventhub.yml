name: azure-eventhub
title: logs via Azure Event Hub
description: Collect logs via Azure Event Hub
vars:
  - name: eventhub
    type: text
    title: Event Hub Name
    multi: false
    required: true
    show_user: true
    description: >-
      The event hub name that contains the logs to ingest. Do not use the event hub namespace here. Elastic recommends using one event hub for each integration. Visit [Create an event hub](https://docs.elastic.co/integrations/azure#create-an-event-hub) to learn more. Use event hub names up to 30 characters long to avoid compatibility issues.
  - name: consumer_group
    type: text
    title: Consumer Group
    multi: false
    required: true
    show_user: true
    default: $Default
  - name: connection_string
    type: password
    secret: true
    title: Connection String
    multi: false
    required: true
    show_user: true
    description: >-
      The connection string required to communicate with Event Hubs. See [Get an Event Hubs connection string](https://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-get-connection-string) to learn more.
  - name: storage_account
    type: text
    title: Storage Account
    multi: false
    required: true
    show_user: true
    description: >-
      The name of the storage account where the consumer group's state/offsets will be stored and updated.
  - name: storage_account_key
    type: password
    secret: true
    title: Storage Account Key
    multi: false
    required: true
    show_user: true
    description: >-
      The storage account key, this key will be used to authorize access to data in your storage account.
  - name: data_stream.dataset
    type: text
    title: Dataset name
    description: >-
      Dataset to write data to. Changing the dataset will send the data to a different index.  You can't use `-` in the name of a dataset and only valid characters for [Elasticsearch index names](https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-index_.html).
    default: azure_logs.generic
    required: true
    show_user: true
  - name: pipeline
    type: text
    title: Ingest Pipeline
    description: >-
      The ingest pipeline ID to use for processing the data. If provided, replaces the default pipeline for this integration.
    required: false
    show_user: true
  - name: storage_account_container
    type: text
    title: Storage Account Container
    multi: false
    required: false
    show_user: false
    description: >-
      The storage account container where the integration stores the checkpoint data for the event hub / consumer group. It is an advanced option to use with extreme care. If you are using the [processor_version](https://www.elastic.co/guide/en/integrations/current/azure_logs.html#azure_logs-event-hub-processor-options) v1 (default option), you MUST use a dedicated storage account container for each event hub / consumer group pair. For information about container name restrictions, please refer to the [Container Names](https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata#container-names) section in Microsoft's documentation. If you don't specify a container name, the integration will automatically generate a default one for you.
  - name: resource_manager_endpoint
    type: text
    title: Resource Manager Endpoint
    description: >-
      The Azure Resource Manager endpoint to use for authentication.
    multi: false
    required: false
    show_user: false
  - name: tags
    type: text
    title: Tags
    multi: true
    required: true
    show_user: false
    default:
      - azure-eventhub
      - forwarded
  - name: processors
    type: yaml
    title: Processors
    multi: false
    required: false
    show_user: false
    description: >
      Processors are used to reduce the number of fields in the exported event or to enhance the event with metadata. This runs in the agent before the logs are parsed. Check [Processors](https://www.elastic.co/guide/en/beats/filebeat/current/filtering-and-enhancing-data.html) for details.

  - name: sanitize_newlines
    type: bool
    title: Sanitizes New Lines
    description: >
      Removes new lines in logs to ensure proper formatting of JSON data and avoid parsing issues during processing.

    multi: false
    required: false
    show_user: false
    default: false
  - name: sanitize_singlequotes
    required: true
    show_user: false
    title: Sanitizes Single Quotes
    description: >
      Replaces single quotes with double quotes (single quotes inside double quotes are omitted) in logs to ensure proper formatting of JSON data and avoid parsing issues during processing.

    type: bool
    multi: false
    default: false
  - name: processor_version
    type: text
    title: Processor version
    multi: false
    required: false
    show_user: false
    default: v1
    description: "The processor version that the integration should use. Possible values are `v1` and `v2` (preview). \nThe v2 event hub processor is in preview, so using the v1 processor is recommended for typical use cases.\nDefault is `v1`."
  - name: processor_update_interval
    type: text
    title: Processor update interval
    multi: false
    required: false
    show_user: false
    default: 10s
    description: >-
      (Processor v2 only) How often the processor should attempt to claim partitions.

      Default is `10` seconds.
  - name: processor_start_position
    type: text
    title: Processor start position
    multi: false
    required: false
    show_user: false
    default: earliest
    description: >-
      (Processor v2 only) Controls from what position in the event hub the processor should start processing messages for all partitions.

      Possible values are `earliest` and `latest`.

      `earliest` starts processing messages from the last checkpoint, or the beginning of the event hub if no checkpoint is available.

      `latest` starts processing messages from the the latest event in the event hub and continues to process new events as they arrive.

      Default is `earliest`.
  - name: migrate_checkpoint
    type: bool
    title: Migrate checkpoint information
    multi: false
    required: false
    show_user: false
    default: false
    description: >-
      (Processor v2 only) Flag to control if the processor should perform  the checkpoint information migration from processor v1 to v2 at startup.

      The checkpoint migration converts the checkpoint information from the v1 format to the v2 format.

      Default is `false`, which means the processor will not perform the checkpoint migration.
  - name: partition_receive_timeout
    type: text
    title: Partition receive timeout
    multi: false
    required: false
    show_user: false
    default: 5s
    description: >-
      (Processor v2 only) Maximum time to wait before processing the messages received from the event hub.

      The partition consumer waits up to a "receive count" or a "receive timeout", whichever comes first.

      Default is `5` seconds.
  - name: partition_receive_count
    type: text
    title: Partition receive count
    multi: false
    required: false
    show_user: false
    default: 100
    description: >-
      (Processor v2 only) Maximum number of messages from the event hub to wait for before processing them.

      The partition consumer waits up to a "receive count" or a "receive timeout", whichever comes first.

      Default is `100` messages.
documentation: |-
  ## Setup

  - You must have a subscription to Microsoft Azure.
  - Elastic Agent must be installed. For more details, check the Elastic Agent [installation instructions](docs-content://reference/fleet/install-elastic-agents.md). You can install only one Elastic Agent per host. 
  Elastic Agent is required to stream data from the **Azure Event Hub** and ship the data to Elastic, where the events will then be processed via the integration's ingest pipelines.

  ### Collecting logs from Azure Eventhub

  To collect logs via Azure Event Hub, select **Collect logs via Azure Event Hub** and configure the following parameters:

  - Eventhub: It is a fully managed, real-time data ingestion service. Elastic recommends using only letters, numbers, and the hyphen (-) character for Event Hub names to maximize compatibility. You can use existing Event Hubs having underscores (_) in the Event Hub name; in this case, the integration will replace underscores with hyphens (-) when it uses the Event Hub name to create dependent Azure resources behind the scenes (e.g., the storage account container to store Event Hub consumer offsets). Elastic also recommends using a separate event hub for each log type as the field mappings of each log type differ.
  - Consumer group:  The publish/subscribe mechanism of Event Hubs is enabled through consumer groups. A consumer group is a view (state, position, or offset) of an entire event hub. Consumer groups enable multiple consuming applications to each have a separate view of the event stream, and to read the stream independently at their own pace and with their own offsets.
  - Connection string: The connection string required to communicate with Event Hubs. For more information, check [these steps](https://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-get-connection-string).
  - Storage account: The name of the storage account the state/offsets will be stored and updated.
  - Storage account key: The storage account key, this key will be used to authorize access to data in your storage account.
